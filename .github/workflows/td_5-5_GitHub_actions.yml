name: td_5_nf8-do-02_github_actions

on:
  pull_request:
    types: [opened]
    branches: [develop]

jobs:
  #needs: [td_5_nf7-do-03_github_actions]
  check_head_branche_name:
    runs-on: ubuntu-latest
    # Check if the pull request event is headed from the feature branch:
    if: (startsWith(github.head_ref, 'features'))
    steps:
      - name: 'Branch name is feature'
        run: echo "Pull request was created from the feature branch"

  check_features_branch_pr_test_coverage:
    needs: [check_head_branche_name]
    runs-on: ubuntu-latest
    strategy:
      # Permet d'arrêter tous les tests en cas d'échec de l'un d'entre-eux
      fail-fast: true
      matrix: 
        node-version: [14, 16]
      
    steps:
      - name: 'Import all repository elements'
        uses: actions/checkout@v3

      - name: 'Initialize Node.JS with the matrix version ${{ matrix.node-version }}'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          
      - name: 'Initialize node modules with a task'
        run: npm ci
        
      - name: 'Initialize Node.JS build'
        run: npm run build --if-present

      - name: 'Initialize tests in the project'
        run: npm run test

  upload_coverage_artifact:
    runs-on: ubuntu-latest
    steps: 
      - name: 'Create artifact file'
        run: echo npm run test:coverage > coverage.txt
        
      - name: 'Upload artifact file'
        uses: actions/upload-artifact@v3
        with:
        # File name and file path that will be used for upload
          name: coverage
          path: coverage.txt

  download:
    needs: [upload_coverage_artifact]
    runs-on: ubuntu-latest
    steps:
      - name: 'Download artifact file'
        uses: actions/download-artifact@v3
        with:
          name: coverage

      - name: 'Read artifact file'
        run: cat coverage.txt
